# This Template was generated on 2019-03-08T21:00:48Z by CloudCompose 0.1.0
#
# Structure
# ├─ spec/support/templates/example_vpc/template.yml
# |  ↳ spec/support/templates/example_vpc/subnet.yml
# |    ↳ spec/support/templates/example_vpc/nested/nested.yml
# |  ↳ spec/support/templates/example_vpc/subnet.yml
# |    ↳ spec/support/templates/example_vpc/nested/nested.yml
# |  ↳ spec/support/templates/example_vpc/subnet.yml
# |    ↳ spec/support/templates/example_vpc/nested/nested.yml
#
# Integrity
#   74113f997ef8495c5bb4ab62d41d2774be000ae920ca5e964eef32efe551faf5 ✓ spec/support/templates/example_vpc/nested/nested.yml
#   a6ceee71e4986ee1749462e6547e9d8f84147c6f8aaf206c573f56793357e53c ✓ spec/support/templates/example_vpc/subnet.yml
#   aa071d29ae8a4c1962c247818e80381c6f122e91d71c1a6f6868cf79cd9bd868 ✓ spec/support/templates/example_vpc/template.yml
#
---
Parameters:
  VPCCidrBlockParameter:
    Type: String
    Default: 10.32.0.0/16
    Description: Network CIDR
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  OwnerTagValueParameter:
    Type: String
    Default: Account
    Description: The owner of this resource
  ResourceTypeValueParameter:
    Type: String
    Default: personal
    Description: The type of resource (Usually the project this belongs to)
  VPCCidrBlockSubnetOneParameter:
    Type: String
    Default: 10.32.0.0/20
    Description: Network CIDR for SubnetOne (Default /20 Gives us 4094 available IPs)
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  VPCCidrBlockPrivateSubnetOneParameter:
    Type: String
    Default: 10.32.16.0/20
    Description: Network CIDR for Private SubnetOne (Default /20 Gives us 4094 available
      IPs)
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  VPCSubnetOneAzParameter:
    Type: AWS::EC2::AvailabilityZone::Name
  VPCCidrBlockSubnetTwoParameter:
    Type: String
    Default: 10.32.32.0/20
    Description: Network CIDR for SubnetTwo (Default /20 Gives us 4094 available IPs)
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  VPCCidrBlockPrivateSubnetTwoParameter:
    Type: String
    Default: 10.32.48.0/20
    Description: Network CIDR for Private SubnetTwo (Default /20 Gives us 4094 available
      IPs)
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  VPCSubnetTwoAzParameter:
    Type: AWS::EC2::AvailabilityZone::Name
  VPCCidrBlockSubnetThreeParameter:
    Type: String
    Default: 10.32.64.0/20
    Description: Network CIDR for SubnetThree (Default /20 Gives us 4094 available
      IPs)
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  VPCCidrBlockPrivateSubnetThreeParameter:
    Type: String
    Default: 10.32.80.0/20
    Description: Network CIDR for Private SubnetThree (Default /20 Gives us 4094 available
      IPs)
    AllowedPattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  VPCSubnetThreeAzParameter:
    Type: AWS::EC2::AvailabilityZone::Name
Resources:
  VPCResource:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlockParameter
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  InternetGatewayResource:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  VPCGatewayAttachmentResource:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCResource
      InternetGatewayId: !Ref InternetGatewayResource
  PublicRouteTableResource:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCResource
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PublicSubnetsInternetRouteResource:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachmentResource
    Properties:
      RouteTableId: !Ref PublicRouteTableResource
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayResource
  PublicSubnetOneResource:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref VPCSubnetOneAzParameter
      VpcId: !Ref VPCResource
      CidrBlock: !Ref VPCCidrBlockSubnetOneParameter
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PrivateSubnetOneResource:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref VPCSubnetOneAzParameter
      VpcId: !Ref VPCResource
      CidrBlock: !Ref VPCCidrBlockPrivateSubnetOneParameter
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  NatGatewaySubnetOneEIPResource:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachmentResource
    Properties:
      Domain: vpc
  PublicSubnetOneRoutingResource:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetOneResource
      RouteTableId: !Ref PublicRouteTableResource
  NatGatewaySubnetOneResource:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt
      - NatGatewaySubnetOneEIPResource
      - AllocationId
      SubnetId: !Ref PublicSubnetOneResource
  PrivateRouteTableSubnetOneResource:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCResource
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PrivateRouteSubnetOneResource:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubnetOneResource
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewaySubnetOneResource
  PrivateRouteSubnetOneTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubnetOneResource
      SubnetId: !Ref PrivateSubnetOneResource
  PublicSubnetTwoResource:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref VPCSubnetTwoAzParameter
      VpcId: !Ref VPCResource
      CidrBlock: !Ref VPCCidrBlockSubnetTwoParameter
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PrivateSubnetTwoResource:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref VPCSubnetTwoAzParameter
      VpcId: !Ref VPCResource
      CidrBlock: !Ref VPCCidrBlockPrivateSubnetTwoParameter
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  NatGatewaySubnetTwoEIPResource:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachmentResource
    Properties:
      Domain: vpc
  PublicSubnetTwoRoutingResource:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetTwoResource
      RouteTableId: !Ref PublicRouteTableResource
  NatGatewaySubnetTwoResource:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt
      - NatGatewaySubnetTwoEIPResource
      - AllocationId
      SubnetId: !Ref PublicSubnetTwoResource
  PrivateRouteTableSubnetTwoResource:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCResource
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PrivateRouteSubnetTwoResource:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubnetTwoResource
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewaySubnetTwoResource
  PrivateRouteSubnetTwoTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubnetTwoResource
      SubnetId: !Ref PrivateSubnetTwoResource
  PublicSubnetThreeResource:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref VPCSubnetThreeAzParameter
      VpcId: !Ref VPCResource
      CidrBlock: !Ref VPCCidrBlockSubnetThreeParameter
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PrivateSubnetThreeResource:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref VPCSubnetThreeAzParameter
      VpcId: !Ref VPCResource
      CidrBlock: !Ref VPCCidrBlockPrivateSubnetThreeParameter
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  NatGatewaySubnetThreeEIPResource:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachmentResource
    Properties:
      Domain: vpc
  PublicSubnetThreeRoutingResource:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetThreeResource
      RouteTableId: !Ref PublicRouteTableResource
  NatGatewaySubnetThreeResource:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt
      - NatGatewaySubnetThreeEIPResource
      - AllocationId
      SubnetId: !Ref PublicSubnetThreeResource
  PrivateRouteTableSubnetThreeResource:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCResource
      Tags:
      - Key: Owner
        Value: !Ref OwnerTagValueParameter
      - Key: Resource
        Value: !Ref ResourceTypeValueParameter
  PrivateRouteSubnetThreeResource:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubnetThreeResource
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewaySubnetThreeResource
  PrivateRouteSubnetThreeTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableSubnetThreeResource
      SubnetId: !Ref PrivateSubnetThreeResource
Outputs:
  VPCID:
    Value: !Ref VPCResource
    Export:
      Name: PersonalVPCID
  PublicSubnetOne:
    Value: !Ref PublicSubnetOneResource
    Export:
      Name: PublicSubnetOneID
  PrivateSubnetOne:
    Value: !Ref PrivateSubnetOneResource
    Export:
      Name: PrivateSubnetOneID
  PublicSubnetTwo:
    Value: !Ref PublicSubnetTwoResource
    Export:
      Name: PublicSubnetTwoID
  PrivateSubnetTwo:
    Value: !Ref PrivateSubnetTwoResource
    Export:
      Name: PrivateSubnetTwoID
  PublicSubnetThree:
    Value: !Ref PublicSubnetThreeResource
    Export:
      Name: PublicSubnetThreeID
  PrivateSubnetThree:
    Value: !Ref PrivateSubnetThreeResource
    Export:
      Name: PrivateSubnetThreeID

